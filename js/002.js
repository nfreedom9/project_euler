var fn = require("./fn"),
	_ = fn._,
	fibonacciSet = fn.fibonacciSet;

console.log("# # # # # # # # # # # # # # # # # # # # 002 # # # # # # # # # # # # # # # # # # # #");

/*
 Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 By starting with 1 and 2, the first 10 terms will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 find the sum of the even-valued terms.
 */

console.log(fibonacciSet(10)); // [ 1, 2, 3, 5, 8, 13, 21, 34, 55, 89 ]

(function(time) {
	//console.log(fibonacciSet(33)); // [ 1, 2, 3, 5, 8, 13, ..., 1346269, 2178309, 3524578, 5702887]
	var result = _.reduce(fibonacciSet(32), function(total, n) {
		if (n % 2 == 0) return total + n;
		return total;
	}, 0);
	console.log('m: ' + result + ' / ' + (new Date() - time)); // 4613732
})(new Date());

(function(time) {
	function solve1(limit) {
		var sum = 0, a = 1, b = 1, h;
		while (b < limit) {
			if (b % 2 === 0) sum += b;
			h = a + b;
			a = b;
			b = h;
		}
		return sum;
	}
	console.log('1: ' + solve1(4 * 1000 * 1000) + ' / ' + (new Date() - time)); // 4613732
})(new Date());

(function(time) {
	function solve2(limit) { // 피보나치 수열이 홀짝홀홀짝홀홀짝홀홀짝홀홀짝홀홀짝홀홀짝홀홀짝홀...
		var sum = 0, a = 1, b = 1, c = a + b;
		while (c < limit) {
			sum += c;
			a = b + c; // 홀
			b = c + a; // 홀
			c = a + b; // 짝
		}
		return sum;
	}
	console.log('2: ' + solve2(4 * 1000 * 1000) + ' / ' + (new Date() - time)); // 4613732
})(new Date());
