/*
 Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

 It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

 Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
 */

var fn = require("./fn"), _ = fn._;

/**
 * @return {number}
 */
function P(n) {
	//return n * (3 * n - 1) / 2;
	return (3 * Math.pow(n, 2) - n) / 2;
}

function revP(n) {
	var a = 3 / 2, b = -1 / 2, c = -n;
	return res(a, b, c)[0];
}

function res(a, b, c) {
	return [(-b + Math.sqrt(b * b - 4 * a * c)) / 2 / a, (-b - Math.sqrt(b * b - 4 * a * c)) / 2 / a];
}

console.log(_.map(_.range(1, 11), P).join(", ")); // 1, 5, 12, 22, 35, 51, 70, 92, 117, 145
console.log(_.map(_.range(1, 10), function(n) {   //   4, 7, 10, 13, 16, 19, 22, 25,  28
	return P(n + 1) - P(n);
}).join(", "));
console.log([P(4), P(7), P(8)].join(", ")); // 22, 70, 92
console.log([revP(P(4)), revP(P(7)), revP(P(8))].join(", ")); // 4, 7, 8

function res1(j, k) {
	return res(3, -1, k * (1 - 3 * k) + j * (1 - 3 * j))[0];
}

function res2(j, k) {
	return res(3, -1, k * (1 - 3 * k) + j * (-1 + 3 * j))[0];
}

console.log(res1(4, 7), res2(4, 7));

function solve044_1() {

}

(function(time) {
	console.log('       # 044_1: ' + solve044_1() + ' / ' + (new Date() - time));
})(new Date());